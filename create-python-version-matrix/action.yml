name: Create run matrix of python versions
description: >-
  Create a run matrix of python versions for pytest workflow.

inputs:
  coverage-python-version:
    default: "3.12"
    description: Python version on which to run the test coverage job.
    required: false
  coverage-target:
    description: >-
      Name of the package over which to compute test coverage. Leave empty if
      you do not want to compute test coverage.
    required: false
  macos-python-version:
    description: >-
      Run tests on macOS on a specific version of Python. If left empty, the no
      macOS job will be created.
    required: false

outputs:
  matrix:
    description: >-
      A JSON object that can be used for setting `jobs.<job_id>.strategy`.
    value: ${{ steps.set-matrix.outputs.matrix }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
    - if: hashFiles('pyproject.toml')
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - if: hashFiles('pyproject.toml')
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: false
    - env:
        UV_PYTHON_DOWNLOADS: never
        UV_SYSTEM_PYTHON: 1
      id: set-matrix
      if: hashFiles('pyproject.toml')
      name: Create run matrix in JSON form
      run: |
        delimiter="$(openssl rand -hex 8)"
        echo "matrix<<${delimiter}" >> $GITHUB_OUTPUT
        uv run -p3.12 $GITHUB_ACTION_PATH/main.py | tee -a $GITHUB_OUTPUT
        echo "${delimiter}" >> $GITHUB_OUTPUT
      shell: bash
