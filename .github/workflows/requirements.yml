on:
  workflow_call:
    secrets:
      token:
        description: >-
          Personal Access Token for GitHub. This needs to be set as a secret by
          the host repository in order to rerun checks after pushing to a PR.
          The default GITHUB_TOKEN does not suffice for that, see here:
          https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows

          This page tells more about creating a PAT:
          https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
        required: true

jobs:
  create-matrix:
    name: Determine Python versions
    if: >-
      github.event_name == 'schedule' ||
      github.event.pull_request.head.repo.full_name == github.repository
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-22.04
    steps:
      - id: set-matrix
        uses: ComPWA/actions/create-python-version-matrix@dev

  pip-constraints:
    name: Update pip constraints
    needs:
      - create-matrix
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.create-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: ComPWA/update-pip-constraints@main
        with:
          python-version: ${{ matrix.python-version }}

  pre-commit:
    name: pre-commit autoupdate
    if: >-
      github.event_name == 'schedule' ||
      github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ComPWA/update-pre-commit@main

  push:
    name: Push changes
    runs-on: ubuntu-22.04
    needs:
      - pip-constraints
      - pre-commit
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.token }}
      - uses: actions/download-artifact@v3
      - run: ls -A
      - name: Move artifacts to correct location
        run: |
          if [[ -d artifact ]]; then
            cd artifact
            ls -A
            [[ -f .pre-commit-config.yaml ]] && mv -f .pre-commit-config.yaml ..
            [[ "$(ls)" != "" ]] && mv -f * ../.constraints/
          fi
      - run: git status -s
      - name: Commit and push changes
        if: github.event_name == 'pull_request'
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.token }}@github.com/${{ github.repository }}
          git config --global user.name "GitHub"
          git config --global user.email "noreply@github.com"
          git checkout -b ${GITHUB_HEAD_REF}
          if [[ $(git status -s) ]]; then
            git add -A
            git commit -m "MAINT: update pip constraints and pre-commit"
            git config pull.rebase true
            git pull origin ${GITHUB_HEAD_REF}
            git push origin HEAD:${GITHUB_HEAD_REF}
          fi
      - name: Create Pull Request
        if: github.event_name == 'schedule'
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: "MAINT: update pip constraints and pre-commit"
          committer: GitHub <noreply@github.com>
          author: GitHub <noreply@github.com>
          title: "MAINT: update pip constraints and pre-commit"
          labels: |
            ðŸ”¨ Maintenance
          branch-suffix: timestamp
          delete-branch: true
          token: ${{ secrets.PAT }}
