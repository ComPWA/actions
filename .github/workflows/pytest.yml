env:
  PYTHONHASHSEED: "0"

on:
  workflow_call:
    inputs:
      additional-extras:
        description: Space-separated additional extras that need to be installed for the tests.
        required: false
        type: string
      coverage-python-version:
        default: "3.12"
        required: false
        type: string
      coverage-target:
        required: false
        type: string
      macos-python-version:
        required: false
        type: string
      multithreaded:
        default: true
        required: false
        type: boolean
      skipped-python-versions:
        required: false
        type: string
      specific-pip-packages:
        required: false
        type: string
      test-output-path:
        required: false
        type: string

jobs:
  create-matrix:
    name: Determine job matrix
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-24.04
    steps:
      - id: set-matrix
        uses: ComPWA/actions/create-pytest-matrix@v1
        with:
          coverage-python-version: ${{ inputs.coverage-python-version }}
          coverage-target: ${{ inputs.coverage-target }}
          macos-python-version: ${{ inputs.macos-python-version }}
          skipped-python-versions: ${{ inputs.skipped-python-versions }}

  pytest:
    name: Run unit tests
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs: create-matrix
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.create-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - uses: ComPWA/actions/cache-sympy@v1
      - name: Determine extras to install
        run: |
          test_extras='--extra test'
          for extra in ${{ inputs.specific-pip-packages }}; do
            test_extras="$test_extras --extra $extra"
          done
          echo "TEST_EXTRAS=$test_extras" | tee -a $GITHUB_ENV
      - name: Determine pytest flags
        run: |
          pytest_flags='-m "not slow or slow"'
          if [[ ! -z '${{ inputs.coverage-target }}' ]]; then
            pytest_flags="$pytest_flags --cov-report=xml --cov=${{ matrix.coverage-target }}"
          fi
          if [[ ! -z '${{ inputs.multithreaded }}' ]]; then
            pytest_flags="$pytest_flags --numprocesses=auto"
          fi
          echo "PYTEST_FLAGS=$pytest_flags" | tee -a $GITHUB_ENV
      - env:
          UV_SYSTEM_PYTHON: 1
        run: uv run ${{ env.TEST_EXTRAS }} pytest ${{ env.PYTEST_FLAGS }}
      - if: matrix.coverage-target != ''
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests

      - uses: actions/upload-artifact@v4
        if: inputs.test-output-path != ''
        with:
          name: test-output-${{ matrix.runs-on }}-${{ matrix.python-version }}
          path: ${{ inputs.test-output-path }}
