on:
  workflow_call:
    inputs:
      python-version:
        default: "3.12"
        required: false
        type: string
    secrets:
      token:
        description: >-
          Personal Access Token for GitHub. This needs to be set as a secret by
          the host repository in order to rerun checks after pushing to a PR.
          The default GITHUB_TOKEN does not suffice for that, see here:
          https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows

          This page tells more about creating a PAT:
          https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
        required: false

env:
  DISABLE_PRE_COMMIT_UV_PATCH: True
  FORCE_COLOR: true

jobs:
  determine-hooks:
    name: Determine skipped pre-commit hooks
    outputs:
      skipped-hooks: ${{ steps.hooks.outputs.skipped-hooks }}
    runs-on: ubuntu-24.04
    steps:
      - id: hooks
        uses: ComPWA/actions/get-skipped-pre-commit-hooks@v3

  pre-commit:
    name: Run local pre-commit hooks
    env:
      FORCE_COLOR: 1
      TERM: xterm-256color
      UV_PYTHON: ${{ inputs.python-version }}
    if: needs.determine-hooks.outputs.skipped-hooks
    needs: determine-hooks
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v6
        with:
          cache-dependency-glob: |
            **/.pre-commit-config.yaml
            **/pyproject.toml
            **/uv.lock
      - name: Fetch pre-commit cache
        uses: actions/cache@v4
        with:
          key: |
            pre-commit-${{ runner.os }}-py${{ inputs.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-py${{ inputs.python-version }}
          path: ~/.cache/pre-commit/
      - id: uv-run
        uses: ComPWA/actions/run-pre-commit@v3
      - if: needs.determine-hooks.outputs.skipped-hooks == 'ALL'
        run: ${{ steps.uv-run.outputs.cmd }} --with pre-commit-uv pre-commit run --all-files --color=always
      - if: needs.determine-hooks.outputs.skipped-hooks != 'ALL'
        name: Run pre-commit hooks that don't work on pre-commit.ci
        run: |-
          export skipped_hooks='${{ needs.determine-hooks.outputs.skipped-hooks }}'
          if [[ $skipped_hooks == *"prettier"* ]]; then
            export PRETTIER_LEGACY_CLI=1
          fi
          for hook in $skipped_hooks; do
            ${{ steps.uv-run.outputs.cmd }} --with pre-commit-uv pre-commit run $hook --all-files --color=always
          done
      - id: diff
        if: always()
        name: Determine changed files
        run: |
          if [[ $(git diff --name-only) ]]; then
            some_file_in_root=$(git ls-files --directory | grep -E '^[^/]+$' | head -n1)
            diff_files="$some_file_in_root $(git diff --name-only)"
            delimiter="$(openssl rand -hex 8)"
            echo "diff<<${delimiter}" >> $GITHUB_OUTPUT
            for file in $diff_files; do
              echo "$file" | tee -a $GITHUB_OUTPUT
            done
            echo "${delimiter}" >> $GITHUB_OUTPUT
          fi
        # https://github.com/actions/upload-artifact/issues/174#issuecomment-934330651
        shell: bash
      - if: always() && steps.diff.outputs.diff != ''
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: pre-commit-changes
          path: ${{ steps.diff.outputs.diff }}

  push:
    if: >-
      always() &&
      github.event_name == 'pull_request' &&
      github.event.pull_request.head.repo.full_name == github.repository &&
      contains(join(needs.*.result, ','), 'failure')
    name: Push changes
    needs:
      - pre-commit
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.token || secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v5
        with:
          merge-multiple: true
          path: .
          pattern: pre-commit-changes*
      - if: always()
        name: Push changes
        run: |
          git diff --color
          if [[ $(git status -s) ]]; then
            git remote set-url origin https://x-access-token:${{ secrets.token }}@github.com/${{ github.repository }}
            git config user.name "GitHub"
            git config user.email "noreply@github.com"
            git checkout -b ${{ github.head_ref }}
            git add -A
            git commit -m "MAINT: implement updates from pre-commit hooks"
            git config pull.rebase true
            git pull origin ${{ github.head_ref }}
            git push origin HEAD:${{ github.head_ref }}
          fi
