name: Install local pip package
description: >-
  Install a local package with pip as well as optional dependencies. The action
  automatically detects if there are constraint files under the `.constraints/`
  directory and uses those to constrain the dependencies.

inputs:
  additional-packages:
    description: Space-separated list of additional packages that need to be installed.
    required: false
  editable:
    description: Install the package in editable mode (`-e` flag).
    required: false
  extras:
    description: Any optional dependencies that the package specifies.
    required: true
  python-version:
    description: Python version used to install the pip packages.
    required: false
  specific-packages:
    description: Any additional packages that you may want to install.
    required: false

runs:
  using: composite
  steps:
    - if: inputs.python-version
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: Determine Python version
      run: |
        echo PYTHON_VERSION=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))') | tee -a $GITHUB_ENV
      shell: bash
    - run: |
        echo "PIP_CACHE_DIR=~/.cache/pip/" >> $GITHUB_ENV
        echo "UV_CACHE_DIR=~/.cache/uv/" >> $GITHUB_ENV
      shell: bash
    - if: runner.os == 'macOS'
      run: |
        echo "PIP_CACHE_DIR=~/Library/Caches/pip" >> $GITHUB_ENV
        echo "UV_CACHE_DIR=~/Library/Caches/uv" >> $GITHUB_ENV
      shell: bash
    - name: Set cache identifier
      run: |
        extras="${{ inputs.extras }}"
        echo "CACHE_IDENTIFIER=${extras//,/-}" >> $GITHUB_ENV
      shell: bash
    - uses: actions/cache@v4
      with:
        key: |
          pip-${{ env.CACHE_IDENTIFIER }}-${{ runner.os }}-py${{ env.PYTHON_VERSION }}-${{ hashFiles('.constraints/py3.*.txt', 'setup.cfg') }}
        restore-keys: |
          pip-${{ env.CACHE_IDENTIFIER }}-${{ runner.os }}-py${{ env.PYTHON_VERSION }}
        path: |
          ${{ env.PIP_CACHE_DIR }}
          ${{ env.UV_CACHE_DIR }}

    - name: Form pip install statement
      run: |
        if [[ "${{ inputs.python-version }}" == "3.6" || "${{ inputs.python-version }}" == "3.7" ]]; then
          echo 'PIP_INSTALL=pip install' | tee -a $GITHUB_ENV
        else
          pip install uv
          echo 'PIP_INSTALL=uv pip install --system' | tee -a $GITHUB_ENV
        fi
      shell: bash

    - name: Set constraints flag
      run: |
        if [[ -z '${{ hashFiles('.constraints/py3.*.txt') }}' ]]; then
          echo 'CONSTRAINTS=' | tee -a $GITHUB_ENV
        else
          echo 'CONSTRAINTS=-c .constraints/py${{ env.PYTHON_VERSION }}.txt' | tee -a $GITHUB_ENV
        fi
      shell: bash

    - name: Set editable flag
      run: |
        if [[ -z '${{ inputs.editable}}' ]]; then
          echo 'EDITABLE=' | tee -a $GITHUB_ENV
        else
          echo 'EDITABLE=-e' | tee -a $GITHUB_ENV
        fi
      shell: bash

    - run: |
        ${{ env.PIP_INSTALL }} ${{ env.CONSTRAINTS }} ${{ env.EDITABLE }} ${{ format('.[{0}] {1}', inputs.extras, inputs.additional-packages ) }}
      shell: bash
    - if: inputs.specific-packages
      run: ${{ env.PIP_INSTALL }} ${{ inputs.specific-packages }}
      shell: bash
